name: CI
on: [push, pull_request]
jobs:
  test:
    name: Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-22.04']
        elixir: ['1.13.x']
        otp: ['25.x']
    steps:
      - uses: actions/checkout@v3
      - name: Set up Elixir
        id: beam
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}
      - name: Build cache
        uses: actions/cache@v2
        with:
          path: _build
          key: build-${{ matrix.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-${{ hashFiles('lib/**/*.ex*') }}
          restore-keys: |
            build-${{ matrix.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-
      - name: Dependencies cache
        uses: actions/cache@v2
        with:
          path: deps
          key: mix-${{ matrix.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            mix-${{ matrix.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-
      - run: mix deps.get
      - run: mix deps.compile
      - run: MIX_ENV=test mix deps.compile
      - name: Check formatting
        run: mix format --check-formatted
      - name: Compile dev
        run: mix compile --warnings-as-errors
      - name: Compile test
        run: MIX_ENV=test mix compile --warnings-as-errors
      - run: mix test
